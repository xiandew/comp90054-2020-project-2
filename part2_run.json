{"status": "ok", "result": {"output": "\n\ntask contains conditional effects. turning off state domination.\n\n --- OK.\n Match tree built with 26 nodes.\n\nPDDL problem description loaded: \n\tDomain: PACMAN_MID\n\tProblem: PACMAN-LEVEL-1\n\t#Actions: 26\n\t#Fluents: 14\nLandmarks found: 1\nStarting search with IW (time budget is 60 secs)...\nrel_plan size: 5\n#RP_fluents 7\nCaption\n{#goals, #UNnachieved,  #Achieved} -> IW(max_w)\n\n{1/1/0}:IW(1) -> [2][3][4][5][6][7]rel_plan size: 0\n#RP_fluents 0Plan found with cost: 6\nTotal time: -1.8999e-10\nNodes generated during search: 27\nNodes expanded during search: 19\nIW search completed\n", "parse_status": "ok", "type": "full", "length": 6, "plan": [{"action": "  (:action move\n    :parameters (a1 b1)\n    :precondition\n      (and\n        (at a1)\n        (connected a1 b1)\n        (or\n          (not\n            (has-ghost b1)\n          )\n          (and\n            (has-ghost b1)\n            (ate-capsule)\n          )\n        )\n      )\n    :effect\n      (and\n        (at b1)\n        (not\n          (at a1)\n        )\n        (not\n          (has-food b1)\n        )\n        (not\n          (has-capsule b1)\n        )\n        (when\n          (has-capsule b1)\n          (ate-capsule)\n        )\n      )\n  )", "name": "(move a1 b1)"}, {"action": "  (:action move\n    :parameters (b1 b2)\n    :precondition\n      (and\n        (at b1)\n        (connected b1 b2)\n        (or\n          (not\n            (has-ghost b2)\n          )\n          (and\n            (has-ghost b2)\n            (ate-capsule)\n          )\n        )\n      )\n    :effect\n      (and\n        (at b2)\n        (not\n          (at b1)\n        )\n        (not\n          (has-food b2)\n        )\n        (not\n          (has-capsule b2)\n        )\n        (when\n          (has-capsule b2)\n          (ate-capsule)\n        )\n      )\n  )", "name": "(move b1 b2)"}, {"action": "  (:action move\n    :parameters (b2 b3)\n    :precondition\n      (and\n        (at b2)\n        (connected b2 b3)\n        (or\n          (not\n            (has-ghost b3)\n          )\n          (and\n            (has-ghost b3)\n            (ate-capsule)\n          )\n        )\n      )\n    :effect\n      (and\n        (at b3)\n        (not\n          (at b2)\n        )\n        (not\n          (has-food b3)\n        )\n        (not\n          (has-capsule b3)\n        )\n        (when\n          (has-capsule b3)\n          (ate-capsule)\n        )\n      )\n  )", "name": "(move b2 b3)"}, {"action": "  (:action move\n    :parameters (b3 b4)\n    :precondition\n      (and\n        (at b3)\n        (connected b3 b4)\n        (or\n          (not\n            (has-ghost b4)\n          )\n          (and\n            (has-ghost b4)\n            (ate-capsule)\n          )\n        )\n      )\n    :effect\n      (and\n        (at b4)\n        (not\n          (at b3)\n        )\n        (not\n          (has-food b4)\n        )\n        (not\n          (has-capsule b4)\n        )\n        (when\n          (has-capsule b4)\n          (ate-capsule)\n        )\n      )\n  )", "name": "(move b3 b4)"}, {"action": "  (:action move\n    :parameters (b4 a4)\n    :precondition\n      (and\n        (at b4)\n        (connected b4 a4)\n        (or\n          (not\n            (has-ghost a4)\n          )\n          (and\n            (has-ghost a4)\n            (ate-capsule)\n          )\n        )\n      )\n    :effect\n      (and\n        (at a4)\n        (not\n          (at b4)\n        )\n        (not\n          (has-food a4)\n        )\n        (not\n          (has-capsule a4)\n        )\n        (when\n          (has-capsule a4)\n          (ate-capsule)\n        )\n      )\n  )", "name": "(move b4 a4)"}, {"action": "  (:action move\n    :parameters (a4 a5)\n    :precondition\n      (and\n        (at a4)\n        (connected a4 a5)\n        (or\n          (not\n            (has-ghost a5)\n          )\n          (and\n            (has-ghost a5)\n            (ate-capsule)\n          )\n        )\n      )\n    :effect\n      (and\n        (at a5)\n        (not\n          (at a4)\n        )\n        (not\n          (has-food a5)\n        )\n        (not\n          (has-capsule a5)\n        )\n        (when\n          (has-capsule a5)\n          (ate-capsule)\n        )\n      )\n  )", "name": "(move a4 a5)"}], "planPath": "/tmp/solver_planning_domains_tmp_4LJgj6kEPqS1Q/plan", "logPath": "/tmp/solver_planning_domains_tmp_4LJgj6kEPqS1Q/log"}}